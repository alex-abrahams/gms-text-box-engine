<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>text = "Lorem ipsum dolor \ssit amet,\s \rconsectetur adipiscing elit. \wQuisque tortor massa, ultricies et \bfelis\w sit amet, aliquet \sullamcorper\s leo. Sed \esollicitudin\e a tortor ac imperdiet. Sed mattis \evehicula vehicula\e. Quisque \gultricies\w nisl id aliquam porttitor. Vestibulum suscipit enim eget hendrerit aliquet. Etiam imperdiet, purus non blandit aliquam, nisl eros convallis sapien, quis tincidunt libero nisi vitae lectus. Duis tempor rutrum feugiat. Vivamus malesuada rutrum eros, sed mattis erat pellentesque vitae. Vivamus nec lectus eget magna gravida condimentum at ut neque. Integer quis ligula non leo tempus rutrum vel sed sapien. Vivamus dictum augue vel ante blandit dignissim. Suspendisse potenti."
width = 500;
for (i=1;i&lt;=string_length(text);i++) {
textlocations[i,0] = 0;
textlocations[i,1] = 0;
}
grow = true;
t = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>wiggly = false;
shake = false;
t++;
xpos = 0;
ypos = 0;
for (i=1;i&lt;=string_length(text);i++) {
    if (string_char_at(text,i) == '\') {
        i++;
        switch (string_char_at(text,i)) {
            case 's':
                wiggly = !wiggly;
            break;
            case 'e':
                shake = !shake;
            break;
        }
        i++;
    }
    textlocations[i,0] = xpos;
    textlocations[i,1] = ypos;
    if (wiggly) {
        textlocations[i,1] += sin((t+i)/4)*4;
    }
    if (shake) {
        textlocations[i,0] += random_range(-2,2);
        textlocations[i,1] += random_range(-2,2);
    }
    xpos += string_width(string_char_at(text,i));
    if (string_char_at(text,i) == ' ') {
        var nextword = string_copy(text,i+1,string_length(text)-i)
        nextword = string_copy(nextword,1,string_pos(" ", nextword)-1);
        if (xpos+string_width(nextword) &gt; width) {
            xpos = 0;
            ypos += string_height(text);
        }
    }
    if (xpos &gt; width) {
        xpos = 0;
        ypos += string_height(text);
    }
}
if (keyboard_check_pressed(vk_anykey) || mouse_check_button_pressed(mb_any)) {
    grow = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_white);
if (grow)
    l = min(t,string_length(text));
else
    l = string_length(text);
for (i=1;i&lt;=l;i++) {
    if (string_char_at(text,i) == '\') {
        i++;
        switch (string_char_at(text,i)) {
            case 'w':
                draw_set_color(c_white);
            break;
            case 'r':
                draw_set_color(c_red);
            break;
            case 'b':
                draw_set_color(c_blue);
            break;
            case 'g':
                draw_set_color(c_green);
            break;
        }
        i++;
    }
    draw_text(x+textlocations[i,0],y+textlocations[i,1],string_char_at(text,i));
}

draw_text(0,0,string(fps));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
